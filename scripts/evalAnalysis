#!/bin/bash
# evalAnalysis

DODISTXFM=""
DODISTXFMLABELS=""
DOXFMNEURON=""
DOJACOBIAN=""
DONEURONSIM=""
DOVISNEURONOVERLAY=""
DOREPORT=""

CENTILES='0.01,0.05,0.1,0.25,0.5,0.75,0.9,0.95,0.99'
INTERVAL="850,650,250" 
ANALYSISRESOLUTION="0.5,0.5,0.5" # in microns

PREFIX="ALLF"

while getopts "ac:djlnprst:v" OPT
do
    case $OPT in
    a) # do all
       DODISTXFMLABELS="1"
       DOXFMNEURON="1"
       DONEURONSIM="1"
       DOVISNEURONOVERLAY="1"
       DOJACOBIAN="1"
       DOREPORT="1"
       ;;
    c) # compartment labels
       COMPARTMENTS=$OPTARG
       echo "Using compartment labels: $COMPARTMENTS"
       ;;
    d) # distance transform
       DODISTXFM="1"
       ;;
    e) # resolution for analysis
       ANALYSISRESOLUTION=$OPTARG
       echo "resolution for analysis: $ANALYSISRESOLUTION"
       ;;
    j) # jacobian 
       DOJACOBIAN="1"
       ;;
    l) # distance transform labels
       DODISTXFMLABELS="1"
       ;;
    n) # transform neuron 
       DOXFMNEURON="1"
       ;;
    p) # prefix 
       PREFIX=$OPTARG
       echo "Prefix: $PREFIX"
       ;;
    t) # template 
       TEMPLATE=$OPTARG
       echo "Found template: $TEMPLATE"
       ;;
    r) # report page
       DOREPORT="1"
       ;;
    s) # neuron similarity 
       DONEURONSIM="1"
       ;;
    v) # vis neuron overlay 
       DOVISNEURONOVERLAY="1"
       echo "Found template: $TEMPLATE"
       ;;
    \?) # getopts issues an error message
       echo "$USAGE" >&2
       exit 1
       ;;
    esac
done

if [ -z $TEMPLATE ];
then
    echo "Trying to infer template"
    #TEMPLATE=`ls $PREFIX-template.nii*`
    TEMPLATE=`find . -maxdepth 1 -name '*nii' -type l`

    lsreturn=`echo $?`

    nr=( $TEMPLATE )
    #echo "${#nr[@]}"

    if [[ "$lsreturn" > 0  ]] || [[ ${#nr[@]} > 1 ]];
    then
        echo "too few or too many candidate templates - uh oh"
        exit 2 
    fi
    TEMPLATE=`readlink -f $TEMPLATE`
fi
echo "TEMPLATE: $TEMPLATE"

if [ -z $COMPARTMENTS ] && [ $DODISTXFMLABELS ];
then

    # Try autodetecting these
    echo "Trying to auto-detect labels or mask"
    templatePath=$(readlink -f $TEMPLATE)
    MASK=$(echo $templatePath | sed 's/.nii/_mask_0p5iso.nii/g')
    COMPARTMENTS=$(echo $templatePath | sed 's/.nii/_labels_0p5iso.nii/g')

    if [[ ! -f "$COMPARTMENTS" ]];
    then
        echo "Did not find $COMPARTMENTS, exiting"
        exit 99
    fi
    echo "Found $COMPARTMENTS"
fi

## THIS SCRIPT DETECTS IF ITS NECESSARY AND SKIPS IF SO
postProcessReg $TEMPLATE $INTERVAL

# DISTANCE TRANSFORM
if [ $DODISTXFM ]; then
    echo "Doing distance transform"
    runDistXfmEval $TEMPLATE
fi

## DISTANCE TRANSFORM LABEL-WISE
if [ $DODISTXFMLABELS ]; then
    echo "Doing distance transform label-wise"
    #runDistXfmHistEvalComp $TEMPLATE $COMPARTMENTS $CENTILES
    runDistXfmEvalComp $TEMPLATE $COMPARTMENTS $ANALYSISRESOLUTION
fi

## TRANSFORMING NEURON IMAGES
if [ $DOJACOBIAN ]; then
    echo "Computing Jacobian"
    evalJacobian $TEMPLATE
fi

## TRANSFORMING NEURON IMAGES
if [ $DOXFMNEURON ]; then
    echo "Transforming neurons"
    runTransformNeuronImages $TEMPLATE
fi

## COMPUTE NEURON SIMILARITY
if [ $DONEURONSIM ]; then
    echo "Compute neuron similarity"
    pairwiseNeuronSimByLine
fi

## VISUALIZE NEURON OVERLAY
if [ $DOVISNEURONOVERLAY ]; then
    echo "Visualize neuron overlay"
    evalVisOverlays
fi

## REPORT PAGE
if [ $DOREPORT ]; then
    echo "Report summary"
    genEvalSummaryPage
fi
