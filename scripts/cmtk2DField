#!/bin/bash
# Generate a deformation field from cmtk that fiji can read.
# Fiji can not read 4D nrrd files as the time of this writing (May2017)

WARPONLY="--warp-only"

additionalargs=""
if [ $1 == "$WARPONLY" ]
then
    echo "warp only"
    additionalargs="$WARPONLY"
    shift
fi

toAnts=""
if [ $1 == "ants" ]
then
    echo "ants"
    toAnts="ants"
    shift
fi

out="$1"
reference="$2"
registration="$3"

echo "registration: $3"
if [[ $additionalargs == "$WARPONLY" ]]
then
    echo "extracting affine part"
    if [[ "$toAnts" == "ants" ]]
    then
        echo "toants"
        cmtkAffineConv $registration | affineImglib2Itk > ${out}Affine.txt
    else
        cmtkAffineConv $registration > ${out}Affine.txt
    fi
    echo "done"
fi

echo "$registration"
if [[ "$registration" == *.gz ]]
then
    regin=`echo $registration | sed 's/.gz//g'`
else
    regin="$registration"
fi

echo "out: $out"
echo "ref: $reference"
echo "reg: $regin"
echo "additional args: $additionalargs"


if [[ "$additionalargs" == "$WARPONLY" ]];
then
    xform2scalar "$additionalargs" -o "$out"-x.nrrd --x-component $reference $regin
    xform2scalar "$additionalargs" -o "$out"-y.nrrd --y-component $reference $regin
    xform2scalar "$additionalargs" -o "$out"-z.nrrd --z-component $reference $regin
else
    echo "total"
    xform2scalar -o "$out"-x.nrrd --x-component $reference $regin
    xform2scalar -o "$out"-y.nrrd --y-component $reference $regin
    xform2scalar -o "$out"-z.nrrd --z-component $reference $regin
fi

# Use this ants utility instead of my hacky thing
CreateDisplacementField 3 0 ${out}-x.nrrd ${out}-y.nrrd ${out}-z.nrrd ${out}.nii

#BASEDIR=$(dirname "$0")
#cp=`cat "$BASEDIR/theclasspath.cp"`
#java -cp "$cp" -Xmx64g process.Concatenate $out.tif "$out"-x.nrrd "$out"-y.nrrd "$out"-z.nrrd
